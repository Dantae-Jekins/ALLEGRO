staging area: backup local

git fetch: Atualiza o .git dentro do pc, mas não atualiza o working directory (os arquivos em si)

git merge: Leva do .git até o working directory

git pull: git fetch + git checkout +  git merge

git stash: backup do working directory

==============Resolvendo Conflitos===================

Quando duas pessoas alternam o mesmo arquivo é que gera um conflito.

Como resolver:

1- Utilizar o git pull
2- Arrumar os erros no arquivo e deixar como você quer, se necessário entrar em contato com a pessoa que deu conflito
3- Após arrumar, git add. git commit -m "" e git push

=====================Branch==========================

Forma de evitar conflitos:
Branch são pastas alternativas da pasta main do Github. Dessa forma, alterações feitas em pastas branch não afetam a pasta main. Ou seja, isola o código para trabalhar de forma individual sem afetar o código principal.

Como criar uma brench:
git checkout -b nomeDaBrench

Como subir a brench para o github:
git push -u origin --all

Para commitar a brench:
git commit -am "Alterações iniciais"
git push

Para alternar entre branches:
git checkout nomeDaBrench

Para mostrar em qual branch você está:
git branch

Como pegar um código que foi movido de uma brench para main por outra pessoa:
git rebase nomeDaBrenchQueOAmigoAlterou

fazer uma alteração
e colocar de volta